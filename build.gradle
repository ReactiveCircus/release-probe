buildscript {
    ext.isCiBuild = System.getenv("CI") == "true"

    ext.buildConfig = [
            minSdk    : 23,
            targetSdk : 28,
            compileSdk: 28,
            buildTools: '28.0.3'
    ]

    ext.versions = [
            androidGradlePlugin       : '3.3.0-beta01',
            googleServicesGradlePlugin: '4.1.0',
            dexcountGradlePlugin      : '0.8.4',
            bugsnag                   : '4.6.1',
            detekt                    : '1.0.0.RC9',
            leakCanary                : '1.6.2',
            kotlin                    : '1.3.0-rc-190',
            firebase                  : [
                    core: '16.0.4'
            ],
            androidx                  : [
                    core             : '1.0.0',
                    annotation       : '1.0.0',
                    appCompat        : '1.0.0',
                    fragment         : '1.0.0',
                    coordinatorLayout: '1.0.0',
                    recyclerView     : '1.0.0',
                    constraintLayout : '1.1.3',
                    cardView         : '1.0.0',
                    arch             : [
                            coreRuntime: '2.0.1-alpha01',
                            coreTesting: '2.0.0',
                    ],
                    lifecycle        : '2.0.0',
                    room             : '2.1.0-alpha01',
                    paging           : '2.1.0-alpha01',
                    navigation       : '1.0.0-alpha06',
                    work             : '1.0.0-alpha10',
                    test             : [
                            core   : '1.0.0-beta02',
                            monitor: '1.1.0-beta02',
                            rules  : '1.1.0-beta02',
                            runner : '1.1.0-beta02',
                            ext    : [
                                    junit: '1.0.0-beta02'
                            ]
                    ],
                    espresso         : '3.1.0-beta02'
            ],
            material                  : '1.0.0',
            okhttp                    : '3.11.0',
            retrofit                  : '2.4.0',
            moshi                     : '1.7.0',
            json                      : '20180130',
            rxJava                    : '2.2.2',
            rxKotlin                  : '2.3.0',
            rxAndroid                 : '2.1.0',
            rxLint                    : '1.6.1',
            koin                      : '1.0.1',
            timber                    : '4.7.1',
            store                     : '3.1.0',
            junit                     : '4.12',
            mockk                     : '1.8.9',
            kluent                    : '1.42'
    ]

    repositories {
        mavenCentral()
        google()
        gradlePluginPortal()
        maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
    }

    dependencies {
        classpath "com.android.tools.build:gradle:${versions.androidGradlePlugin}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath "com.google.gms:google-services:${versions.googleServicesGradlePlugin}"
        classpath "com.getkeepsafe.dexcount:dexcount-gradle-plugin:${versions.dexcountGradlePlugin}"
        classpath "gradle.plugin.io.gitlab.arturbosch.detekt:detekt-gradle-plugin:${versions.detekt}"
        classpath "android.arch.navigation:navigation-safe-args-gradle-plugin:${versions.androidx.navigation}"
    }
}

allprojects {
    repositories {
        mavenCentral()
        google()
        jcenter()
        maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs = ["-progressive"]
        }
    }

    tasks.withType(Test) {
        testLogging {
            events 'passed', 'skipped', 'failed'
        }
    }
}

subprojects {
    apply from: "$project.rootDir/gradle/detekt.gradle"
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def envOrProp(String name) {
    def value = System.getenv(name)
    value != null ? value : hasProperty(name) ? getProperty(name) : ''
}
