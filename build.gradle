buildscript {
    ext.isCiBuild = System.getenv("CI") == "true"
    ext.isIdeBuild = project.hasProperty('android.injected.invoked.from.ide')
    ext.enableCoverage = project.hasProperty('coverage')

    ext.buildConfig = [
            minSdk    : 23,
            targetSdk : 28,
            compileSdk: 28,
            buildTools: '28.0.3'
    ]

    ext.versions = [
            androidGradlePlugin       : '3.6.0-alpha03',
            googleServicesGradlePlugin: '4.2.0',
            dexcountGradlePlugin      : '0.8.6',
            bugsnag                   : '4.14.2',
            detekt                    : '1.0.0-RC15',
            leakCanary                : '2.0-alpha-2',
            kotlin                    : '1.3.31',
            kotlinx                   : [
                    coroutines: '1.3.0-M1',
            ],
            firebase                  : [
                    core: '16.0.8'
            ],
            androidx                  : [
                    core             : '1.1.0-beta01',
                    annotation       : '1.1.0-rc01',
                    appCompat        : '1.1.0-beta01',
                    activity         : '1.0.0-alpha08',
                    fragment         : '1.1.0-alpha09',
                    coordinatorLayout: '1.1.0-beta01',
                    recyclerView     : '1.1.0-alpha05',
                    constraintLayout : '1.1.3',
                    arch             : '2.1.0-beta01',
                    lifecycle        : '2.1.0-beta01',
                    room             : '2.1.0-rc01',
                    paging           : '2.1.0',
                    navigation       : '2.1.0-alpha05',
                    work             : '2.1.0-alpha03',
                    test             : [
                            core   : '1.2.0',
                            monitor: '1.2.0',
                            rules  : '1.2.0',
                            runner : '1.2.0',
                            ext    : [
                                    junit: '1.1.1'
                            ]
                    ],
                    espresso         : '3.2.0'
            ],
            material                  : '1.1.0-alpha07',
            okhttp                    : '3.14.2',
            retrofit                  : '2.6.0',
            moshi                     : '1.8.0',
            json                      : '20180130',
            rxJava                    : '2.2.9',
            rxKotlin                  : '2.3.0',
            rxAndroid                 : '2.1.1',
            rxLint                    : '1.7.4',
            koin                      : '1.0.2',
            timber                    : '4.7.1',
            store                     : '3.1.1',
            junit                     : '4.12',
            mockk                     : '1.9.3',
            kluent                    : '1.49'
    ]

    repositories {
        mavenCentral()
        google()
        gradlePluginPortal()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:${versions.androidGradlePlugin}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath "com.google.gms:google-services:${versions.googleServicesGradlePlugin}"
        classpath "com.getkeepsafe.dexcount:dexcount-gradle-plugin:${versions.dexcountGradlePlugin}"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:${versions.detekt}"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:${versions.androidx.navigation}"
    }
}

allprojects {
    repositories {
        mavenCentral()
        google()
        jcenter()
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs += ["-progressive"]
        }
    }

    tasks.withType(Test).configureEach {
        testLogging {
            events 'passed', 'skipped', 'failed'
        }
    }
}

subprojects {
    apply from: "$project.rootDir/gradle/detekt.gradle"

    /**
     * Disable debug and mock tests to avoid running the same tests repeatedly in different build variants.
     * ./gradlew test -PslimTests will run unit tests for *ProdRelease and *Release in Android App and Library projects,
     * and all tests in JVM projects.
     */
    if (project.hasProperty('slimTests')) {
        tasks.whenTaskAdded { task ->
            if (task.name ==~ /test.*(?i)(debug|mock).*/) {
                task.configure {
                    it.enabled = false
                }
            }
        }
    }
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}

def envOrProp(String name) {
    def value = System.getenv(name)
    value != null ? value : project.hasProperty(name) ? project.getProperty(name) : ''
}

apply from: "$project.rootDir/gradle/projectDependencyGraph.gradle"
